
-include $(PCD)/Make.local
PHYSICS = $(PPN)/physics
SOLVER = $(PPN)/solver
UTILS = $(PPN)/utils
-include $(PCD)/ARCH/$(ARCH)/Makefile

ONEUPWD := $(shell (cd ..;pwd))
NPDATA = $(ONEUPWD)/NPDATA

# get NNN ifrom isotopedatabase.txt and INDEX_REACLIB from ppn_physics.input
pNNN = $(shell grep -m 1 NNN_max isotopedatabase.txt | awk -F"=" '{print $$2}' | awk '{print $$1}')
pIDX_RCLB = $(shell grep INDEX_REACLIB ppn_physics.input | awk -F"=" '{print $$2}' | awk '{print $$1}')
pNVCP = $(shell grep NVCP ppn_physics.input | awk -F"=" '{print $$2}' | awk '{print $$1}')

# get msl, nrefmax and gfdim from ppn_frame.input
pmsl = $(shell grep msl ppn_frame.input | awk -F"=" '{print $$2}' | awk '{print $$1}')
pnrefmax = $(shell grep nrefmax ppn_frame.input | awk -F"=" '{print $$2}' | awk '{print $$1}')
pgfdim = $(shell grep gfdim ppn_frame.input | awk -F"=" '{print $$2}' | awk '{print $$1}')
$(info ********** COMPILING WITH THESE PARAMETERS **********)
$(info NSP = $(pNNN) + $(pNVCP) + 20)
$(info NRE = ($(pNNN) + $(pNVCP) + 20) * 15)
$(info INDEX_REACLIB = $(pIDX_RCLB))
$(info MSL = $(pmsl))
$(info NREFMAX = $(pnrefmax))
$(info GFDIM = $(pgfdim))
$(info *****************************************************)


# compile the code, copying back the executable

all : mppnp $(NPDATA)
	cp $(PCD)/mppnp.exe .

debug : mppnp-debug
	cp $(PCD)/mppnp.exe .

mppnp : ppn_physics.input ppn_frame.input isotopedatabase.txt H5_out H5_restart H5_surf
	$(MAKE) pNNN=$(pNNN) pIDX_RCLB=$(pIDX_RCLB) pNVCP=$(pNVCP) pmsl=$(pmsl) pnrefmax=$(pnrefmax) pgfdim=$(pgfdim) -C $(PCD)
	cp -n $(SOLVER)/run_template/ppn_solver.input .

mppnp-debug : ppn_physics.input ppn_frame.input isotopedatabase.txt H5_out H5_restart H5_surf
	$(MAKE) debug pNNN=$(pNNN) pIDX_RCLB=$(pIDX_RCLB) pNVCP=$(pNVCP) pmsl=$(pmsl) pnrefmax=$(pnrefmax) pgfdim=$(pgfdim) -C $(PCD)

isotopedatabase.txt:
	cp $(PHYSICS)/run_template/isotopedatabase*.txt .

ppn_physics.input:
	cp $(PHYSICS)/run_template/ppn_physics.input .
	$(info ***** ppn_physics.input not found)
	$(info ***** fetching ppn_physics.input from $(PHYSICS)/run_template)

H5_out:
	mkdir H5_out

H5_surf:
	mkdir H5_surf

H5_restart:
	mkdir H5_restart

# NPDATA sym link
$(NPDATA):
	ln -s $(PHYSICS)/NPDATA  $(ONEUPWD)/NPDATA

# superLU libraries clean

superclean:
	$(MAKE) SOLVER=$(SOLVER) BLASLIB=$(BLASLIB) -C $(SOLVER)/source/SuperLU_5.0 clean

# clean the whole frame and packages:

distclean :
	$(MAKE) clean
	$(MAKE) distclean -C $(PCD)

# clean local

clean :
	if [ -f mppnp.exe ]; then \
		rm mppnp.exe; \
	fi
